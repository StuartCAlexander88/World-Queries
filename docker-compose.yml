services: 
  db:   # database service (MySQL)
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: SET08103
      MYSQL_DATABASE: SET08103             # Specify the name of database - this will be the name of the databse we need to quote in the connection code.
      MYSQL_USER: WedTeam1                    # Create database user account
      MYSQL_PASSWORD: reallySecurePassword!   # create a really good password for ourselves!
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./SET08103.sql:/docker-entrypoint-initdb.d/SET08103 
    ports: 
      - "3306:3306"   # our java app should be able to connect through "localhost:3306" or container if we are running inside docker, so would be db:3306 (service name:port)
    networks:
      - backend

  phpmyadmin: # phpMyAdmin service
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - 8080:80 # assigns a port for the phpmyadmin interface, so localhost:8001 will allow us to access phpmyadmin URL on the web server.
    environment: 
      - PMA_HOST=db   # references our 'db' service within the container.
      - PMA_PORT=3306 # default phpMyAdmin port is 3306!
    depends_on:
      - db
    networks:
      - backend

  java-app:
    build: .
    container_name: java-app
    depends_on:
      mysql_db:
        -   condition: service_healthy
    command: ["java", "-jar", "World-Queries-1.0-SNAPSHOT.jar"]

    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: WedTeam1
      DB_PASS: reallySecurePassword!
      DB_NAME: SET08103
    networks:
      - backend

networks:
    backend:
      driver: bridge

# Apache is not necessary when using a java interface
#  www: # Web server / PHP service
#    image: php:8.3.26RC1-apache # pulls image of PHP and apache from docker hub
#    volumes:
#      - ./start.bash:/start.bash
#      - "./:/var/www/html" # default location for apache web server files, where the default webpage is served from
#    ports:
#      - 80:80 # maps ports of container to the local port 80, to allow viewing of the webserver on 'localhost'
#    # - 443:443 we could set up SSL certificates and use https port/encrypted traffic, but for this assessment probably not necessary
